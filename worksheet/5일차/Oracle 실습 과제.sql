-- 오라클 실습 과제 --

-- Basic SELECT--
--3. "국어국문학과" 에 다니는 여학생 중 현재 휴학중인 여학생을 찾아달라는 요청이
--들어왔다. 누구인가? (국문학과의 '학과코드'는 학과 테이블(TB_DEPARTMENT)을 조회해서
--찾아 내도록 하자)


SELECT STUDENT_NAME FROM TB_STUDENT
JOIN TB_DEPARTMENT
USING(DEPARTMENT_NO)
WHERE ABSENCE_YN = 'Y' AND DEPARTMENT_NAME = '국어국문학과'
AND STUDENT_SSN LIKE '%-2%';

SELECT STUDENT_NAME FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
AND STUDENT_SSN LIKE '%-2%'
AND DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '국어국문학과');
--------------------------------------------------
--4. 도서관에서 대출 도서 장기 연체자 들을 찾아 이름을 게시하고자 한다. 그 대상자들의
--학번이 다음과 같을 때 대상자들을 찾는 적절한 SQL 구문을 작성하시오.
-- A513079, A513090, A513091, A513110, A513119

SELECT STUDENT_NAME FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079','A513090','A513091','A513110','A513119')
ORDER BY 1 DESC;
--------------------------------------------------
-- Additional SELECT 함수 --

--4. 교수들의 이름 중 성을 제외핚 이름맊 출력하는 SQL 문장을 작성하시오. 출력 헤더는
--"이름" 이 찍히도록 핚다. (성이 2 자인 경우는 교수는 없다고 가정하시오)
SELECT SUBSTR(PROFESSOR_NAME,2) "이름" FROM TB_PROFESSOR;

--5. 춘 기술대학교의 재수생 입학자를 구하려고 한다. 어떻게 찾아낼 것인가? 이때, 
--19 살에 입학하면 재수를 하지 않은 것으로 갂주핚다.
-- 생년월일 - 입학날짜 > 19 재수생
SELECT STUDENT_NAME FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) - EXTRACT(YEAR FROM TO_DATE('19'||SUBSTR(STUDENT_SSN,1,6),'YYYYMMDD')) > 19;


--6. 2020 년 크리스마스는 무슨 요일인가?
SELECT TO_CHAR(TO_DATE('20201225','YYYYMMDD'),'DAY') "2020년 크리스마스 요일" FROM DUAL;


----------------------------------- 0명인 데이터도 출력되도록 수정
--13. 학과 별 휴학생 수를 파악하고자 핚다. 학과 번호와 휴학생 수를 표시하는 SQL 문장을----------------!!!!
--작성하시오.

-- 서브쿼리 이용
SELECT DEPARTMENT_NO "학과 번호",
(SELECT DEPARTMENT_NAME FROM TB_DEPARTMENT WHERE S.DEPARTMENT_NO = DEPARTMENT_NO) "학과 이름", 
COUNT(*)||'명' "휴학생 수" 
FROM TB_STUDENT S
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO
ORDER BY 1 ASC, DEPARTMENT_NO ASC;

--JOIN 이용
SELECT DEPARTMENT_NO "학과 번호",
DEPARTMENT_NAME "학과 이름",
COUNT(*) ||'명' "휴학생 수"
FROM TB_STUDENT
JOIN TB_DEPARTMENT
USING(DEPARTMENT_NO)
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO, DEPARTMENT_NAME
ORDER BY 1 ASC, DEPARTMENT_NO ASC;

-----------------------------------------------------
-- Additional SELECT Option----

--6. 학생 번호, 학생 이름, 학과 이름을 학생 이름으로 오름차순 정렬하여 출력하는 SQL 
--문을 작성하시오.
SELECT STUDENT_NO "학생 번호", STUDENT_NAME "학생 이름", DEPARTMENT_NAME "학과 이름" 
FROM TB_STUDENT
LEFT OUTER JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME ASC;

--7. 춘 기술대학교의 과목 이름과 과목의 학과 이름을 출력하는 SQL 문장을 작성하시오.
SELECT CLASS_NAME "과목 이름", DEPARTMENT_NAME "학과 이름" FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

SELECT CLASS_NAME "과목 이름", 
(SELECT DEPARTMENT_NAME FROM TB_DEPARTMENT WHERE C.DEPARTMENT_NO = DEPARTMENT_NO) "학과 이름"
FROM TB_CLASS C;


--8. 과목별 교수 이름을 찾으려고 핚다. 과목 이름과 교수 이름을 출력하는 SQL 문을
--작성하시오.
SELECT  CLASS_NAME "과목 이름", PROFESSOR_NAME "교수 이름"
FROM TB_CLASS
LEFT OUTER JOIN TB_PROFESSOR USING(DEPARTMENT_NO)
ORDER BY PROFESSOR_NAME ASC;

--9. 8 번의 결과 중 ‘인문사회’ 계열에 속핚 과목의 교수 이름을 찾으려고 핚다. 이에
--해당하는 과목 이름과 교수 이름을 출력하는 SQL 문을 작성하시오.
SELECT CATEGORY, DEPARTMENT_NO, DEPARTMENT_NAME "과목 이름",PROFESSOR_NAME "교수 이름"FROM TB_DEPARTMENT 
JOIN TB_PROFESSOR USING(DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';


--10. ‘음악학과’ 학생들의 평점을 구하려고 핚다. 음악학과 학생들의 "학번", "학생 이름", 
--"젂체 평점"을 출력하는 SQL 문장을 작성하시오. (단, 평점은 소수점 1 자리까지맊
--반올림하여 표시핚다.)


SELECT  STUDENT_NO "학번", STUDENT_NAME "학생 이름", ROUND(AVG(POINT),1) "전체 평점" FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME;

---------------------------------------------


----------------------------------DDL 테이블 생성 -----------
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USER_YN CHAR(1) DEFAULT 'Y' CHECK(USER_YN IN('Y','N')) 
);
ALTER TABLE TB_CATEGORY ADD CONSTRAINT PK_NAME PRIMARY KEY(CATEGORY_NAME);
DROP TABLE TB_CATEGORY;
DESC TB_CATEGORY;

CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);
DROP TABLE TB_CLASS_TYPE;
DESC TB_CLASS_TYPE;

--테이블 생성
----------DDL-------
--5. 두 테이블에서 컬럼 명이 NO 인 것은 기존 타입을 유지하면서 크기는 10 으로, 컬럼명이
--NAME 인 것은 마찪가지로 기존 타입을 유지하면서 크기 20 으로 변경하시오.

ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10);



--6. 두 테이블의 NO 컬럼과 NAME 컬럼의 이름을 각 각 TB_ 를 제외핚 테이블 이름이 앞에
--붙은 형태로 변경핚다.
--(ex. CATEGORY_NAME)

ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_NO;

--7. TB_CATAGORY 테이블과 TB_CLASS_TYPE 테이블의 PRIMARY KEY 이름을 다음과 같이
--변경하시오.
--Primary Key 의 이름은 ‚PK_ + 컬럼이름‛으로 지정하시오. (ex. PK_CATEGORY_NAME )

-- 제약조건 조회
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'TB_CATEGORY';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'TB_CLASS_TYPE';
-- 제약조건 삭제 및 추가
ALTER TABLE TB_CATEGORY DROP CONSTRAINT PK_NAME;
ALTER TABLE TB_CATEGORY ADD CONSTRAINT PK_CATEGORY_NAME PRIMARY KEY(CATEGORY_NAME);
-- 제약조건 삭제 및 추가
ALTER TABLE TB_CLASS_TYPE DROP CONSTRAINT SYS_C007223;
ALTER TABLE TB_CLASS_TYPE ADD CONSTRAINT PK_CLASS_NO PRIMARY KEY(CLASS_NO);

--8. 다음과 같은 INSERT 문을 수행핚다.
INSERT INTO TB_CATEGORY VALUES ('공학','Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES ('의학','Y');
INSERT INTO TB_CATEGORY VALUES ('예체능','Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y');
COMMIT;




-----------------------
------DML------
--3. 국어국문학과 학생들의 정보맊이 포함되어 있는 학과정보 테이블을 맊들고자 핚다. 
--아래 내용을 참고하여 적젃핚 SQL 문을 작성하시오. (힌트 : 방법은 다양함, 소신껏
--작성하시오)
--테이블이름
--TB_국어국문학과
--컬럼
--학번
--학생이름
--출생년도 <= 네자리 년도로 표기
--교수이름

--새로운 테이블 생성
CREATE TABLE TB_국어국문학과 (
    STUDENT_NO VARCHAR2(10),
    STUDENT_NAME VARCHAR2(40),
    STUDENT_BIRTH_YEAR VARCHAR2(4) CHECK (LENGTH(STUDENT_BIRTH_YEAR) = 4),
    COACH_PROFESSOR_NAME VARCHAR2(20)
);
-- 새로운 테이블에 조건에 맞는 원본 데이터 추출 및 삽입
INSERT INTO TB_국어국문학과 (STUDENT_NO, STUDENT_NAME, STUDENT_BIRTH_YEAR, COACH_PROFESSOR_NAME)
SELECT STUDENT_NO, STUDENT_NAME,
CASE 
    WHEN SUBSTR(STUDENT_SSN,1,2) < SUBSTR(EXTRACT(YEAR FROM SYSDATE),3,2) THEN '20' || SUBSTR(STUDENT_SSN,1,2)
    ELSE '19'||SUBSTR(STUDENT_SSN,1,2)
END, 
COACH_PROFESSOR_NO 
FROM TB_STUDENT
LEFT OUTER JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과';

-- 컬럼 정보
DESC TB_국어국문학과;
-- 테이블 삭제
DROP TABLE TB_국어국문학과;
-- 제약조건 확인
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'TB_국어국문학과';
-- 테이블 확인
SELECT * FROM TB_국어국문학과;



--4. 현 학과들의 정원을 10% 증가시키게 되었다. 이에 사용핛 SQL 문을 작성하시오. (단, 
--반올림을 사용하여 소수점 자릿수는 생기지 않도록 핚다)

SELECT CAPACITY "원본", CAPACITY_MODIFY "수정"FROM TB_DEPARTMENT;

ALTER TABLE TB_DEPARTMENT ADD CAPACITY_MODIFY NUMBER;
ALTER TABLE TB_DEPARTMENT DROP COLUMN CAPACITY_MODIFY;

UPDATE TB_DEPARTMENT SET CAPACITY_MODIFY = ROUND(CAPACITY * 1.1);


--5. 학번 A413042 인 박건우 학생의 주소가 "서울시 종로구 숭인동 181-21 "로 변경되었다고
--핚다. 주소지를 정정하기 위해 사용핛 SQL 문을 작성하시오.
SELECT * FROM TB_STUDENT
WHERE STUDENT_NO = 'A413042';

UPDATE TB_STUDENT SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21' WHERE STUDENT_NO = 'A413042';



--
--6. 주민등록번호 보호법에 따라 학생정보 테이블에서 주민번호 뒷자리를 저장하지 않기로
--결정하였다. 이 내용을 반영핛 적젃핚 SQL 문장을 작성하시오.
--(예. 830530-2124663 ==> 830530 )

ALTER TABLE TB_STUDENT ADD STUDENT_SSN_MODIFY VARCHAR2(30);

ALTER TABLE TB_STUDENT DROP COLUMN STUDENT_SSN_MODIFY;
DESC TB_STUDENT;

UPDATE TB_STUDENT SET STUDENT_SSN_MODIFY = SUBSTR(STUDENT_SSN, 1, 6);


SELECT STUDENT_SSN "원본", STUDENT_SSN_MODIFY "수정" FROM TB_STUDENT;



